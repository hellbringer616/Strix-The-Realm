Skills: [
    {
        #This skill is equivalent of a javaskill cz.neumimto.skills.active.SkillMegabolt.
        # Id must be unique
        Id: "ntrpg:megabolt2"

        # The name of the skill.
        # Name may be changed per each skilltree, but there must not be multiple different skills with the same name
        # skills may be executed via /skill <skill:id> or /skill <skill-name>
        Name: megabolt

        # Parent node defines if the skill is Active/passive whenever its requires targetted entity etc
        # Parent node may change which variables you may use in the Script section.
        # Eg. Inheriting from active wont make accessible varible _target
        Parent: active

        # Skill types
        Skill-Types: [
            "ntrpg:aoe",
            "ntrpg:lightning"
        ]

        # If the skill may deal damage there must be node DamageType.
        # If the skill deals no damage to anyone (eg simple healing) this node should not be defined
        Damage-Type: "magic"

        # Optional node, some extra informations related to skills, skill lore can be found in some ingame inventory menus
        Lore: [
            line1
            "&4line2"
        ]
        # Brief description of the skill, skill description can be found in some ingame inventory menus
        Description: "Damages nearby entities with lightning"

        # Default config nodes you with to use, this section has to have all nodes, if you wish to execute skills via /nadmin command, otherwise it may be empty
        Settings: {
            "damage": 10
            "damage_levelbonus": 5
            "range": 15
            "range_levelbonus": 1
            "mana": 10
            "mana_levelbonus": 10
        }
        # How you with to load the skill, lets keep there js for now
        Loader: js

        # The actual sklll
        # The script is called AFTER validations such as mana pool check, cooldowns etc
        # If you need to debug anything simply call function log(<data>)
        # For more documentations check out wiki, or functions.md file
        Script:
          """
          var totalDamage = param("damage", _context);
          var totalRange = param("range", _context);

          for_each_nearby_enemy(_caster, totalRange, function(entity) {
                  var location = get_location(entity);
                  if (damage(_caster, entity, totalDamage, _context)) {
                      spawn_lightning(location);
                  }
                }
          );
          """
    }
    {
        Id: "id:vitalize"
        Name: Vitalize
        Parent: active
        Skill-Types: [
            "ntrpg:healing"
        ]
        Lore: [
            line1
            "&4line2"
        ]
        Description: "Applies buff to the caster, which regenerates mana and health over time"
        Settings: {
            "duration": 10
            "duration_levelbonus": 5
            "health-per-tick": 15
            "health-per-tick_levelbonus": 1
            "mana-per-tick": 15
            "mana-per-tick_levelbonus": 1
            "tick-rate": 1
            "mana": 10
            "mana_levelbonus": 10
            "tick-rate_levelbonus": 10
        }
        Loader: js
        Script:
            """
            // Read settings from context

               var totalDuration = param("duration", _context);
               var healingPerTick = param("heal-per-tick", _context);
               var manaPerTick = param("mana-per-tick", _context);
               var tickRate = param("tick-rate", _context);
            // Applies effect to _target.
            // _target is a variable, which references a living entity.
            // Depending on the skill "Parent" target may be ally, enemy, self
                apply_effect(_target, new VitalizeEffect(_target, totalDuration, tickrate, healingPerTick, manaPerTick), _skill);
                return SkillResult.OK;
            """
    }
]