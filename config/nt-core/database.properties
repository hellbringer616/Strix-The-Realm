# If set to true Hibernate will print SQL queries into the system.out output.
# This is useful only during the development in cases where you need to use tool such as postgre's 'analyze' function
hibernate.show_sql=false



# Each database has its own JDBC
# This value will be different for each database type

# Most Common Databases and their driver class names:
# PostgreSQL org.postgresql.Driver
# MySQL com.mysql.jdbc.Driver
# MariaDB org.mariadb.jdbc.Driver
# H2 org.h2.Driver
# Oracle oracle.jdbc.driver.OracleDriver

hibernate.connection.driver_class=com.mysql.jdbc.Driver

# Tells hibernate which dialect to use to build SQL queries.
# This might be a bit harder to setup, for some databases you will have to know database version you are running.
# PostgreSQL org.hibernate.dialect.PostgreSQLDialect
# MySQL 5 and MySQL 6 org.hibernate.dialect.MySQL57Dialect
# MySQL 8 org.hibernate.dialect.MySQL8Dialect
# MariaDB org.hibernate.dialect.MariaDBDialect
# MariaDB 5 org.hibernate.dialect.MariaDB53Dialect
# H2 org.hibernate.dialect.H2Dialect

# More can be found here https://docs.jboss.org/hibernate/orm/3.6/reference/en-US/html/session-configuration.html
hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

# JDBC url,
# Usually in a format jdbc:[manufacturer]://[url][:port]/[database name][?optional params]
# In a case you need to access the database server via IPV6 protocol its required
# to put the ip into '[ ]' such as [0000:0000:0000:0000:0000:0000:0000:ipv6]:3306


# mysql: jdbc:mysql://localhost:3306/mydb (if you get errors related to missing SSL certificate/or CA authority add ?useSSL=false at the end of the string)
# if you get some more errors related to mysql add another parameter ?allowMultiQueries=true and the end of the connection string
# if you need to combine two and more parameters the delimiter is & - for example: jdbc:mysql://localhost:3306/mydb?useSSL=false&allowMultiQueries=true
# mariadb: jdbc:mariadb://localhost:3306/mydb


# H2: jdbc:h2:file:~/path/to/my/db/file

# H2: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1 - no data will be writen to the hard drive. all data will be lost after server shutdown
#                                        - Useful only for testing purposes
# Every major SQL database is supported
# but ...
# !!!! I STRONGLY DISCOURAGE EVERYONE TO USE H2 ON PRODUCTION SERVER !!!!
hibernate.connection.url=jdbc:mysql://localhost:3306/nt-rpg?useSSL=false&allowMultiQueries=true

# If you want to use mysql or postgres put remove following line (or put # at the start of the line)
hibernate.hbm2ddl.auto=update

# Username
hibernate.connection.username=nt-rpg

# Password
hibernate.connection.password=Sp@wnm0ar1

# Connection Pool
hibernate.hikari.connectionTimeout=10000
hibernate.hikari.minimumIdle=3
hibernate.hikari.maximumPoolSize=7
hibernate.hikari.idleTimeout=300000

# Connection Pool Provider, not recommanded to change, unless you are aware what do you doing.
hibernate.connection.provider_class=com.zaxxer.hikari.hibernate.HikariConnectionProvider
